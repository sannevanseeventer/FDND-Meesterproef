/* stylelint-disable selector-max-universal */
@use "sass:math";
/**
 * Screen reader only
 * This hides content visually, but keeps it available for assistive technologies
 */
@mixin sr-only {
  overflow: hidden;
  position: absolute;
  width: 1px;
  height: auto;
  margin: 0;
  padding: 0;
  white-space: nowrap;
  border: 0;
  clip: rect(0 0 0 0);
}

/**
 * Helper mixin for reduced motion media query
 */
@mixin reduced-motion {
  @media (prefers-reduced-motion) {
    @content;
  }
}

/**
 * Helper mixin for a preferred higher contrast
 */
@mixin high-contrast {
  /* stylelint-disable-next-line media-feature-name-no-unknown */
  @media (prefers-contrast: more) {
    @content;
  }
}

/**
 * Helper mixin for print styles
 */
@mixin print {
  @media print {
    @content;
  }
}

/**
 * Styled scrollbar
 */
@mixin styled-scrollbar($color: var(--black) ish) {
  // Standardized (currently only Firefox, plus on macOS only when system
  // preferences are set to always show scrollbars).
  scrollbar-color: $color transparent;
  scrollbar-width: thin;

  // WebKit only (Chrome, Safari, Edge).
  &::-webkit-scrollbar-track {
    margin: 3px 0;
    background-color: transparent;
  }
  &::-webkit-scrollbar {
    width: 12px;
  }
  &::-webkit-scrollbar-thumb {
    background-color: $color;
    background-clip: padding-box;
    border: 3px solid transparent;
    border-top: 0;
    border-bottom: 0;
  }
}
/**
 * Hide scrollbar
 */
@mixin hide-scrollbar {
  scrollbar-width: none; /* Firefox */
  -ms-overflow-style: none; /* IE 10+ */
  &::-webkit-scrollbar {
    display: none; /* Chrome Safari */
  }
}

/**
 * Smooth scrolling
 */
@mixin smooth-scrolling {
  -webkit-overflow-scrolling: touch;
  scroll-behavior: smooth;
  -ms-overflow-style: -ms-autohiding-scrollbar;
}

/**
 * Placeholder styling
 *
 * Usage:
 * input[type="text"] {
 *     @include placeholder {
 *         color: red;
 *     }
 * }
 */
@mixin placeholder {
  &::placeholder {
    @content;
  }
}

/**
 * Font smoothing
 */
@mixin font-smoothing($enabled: true) {
  @if $enabled {
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
  } @else {
    -webkit-font-smoothing: initial;
    -moz-osx-font-smoothing: initial;
  }
}

/**
 * Media query dark mode
 *
 * Usage:
 * body {
 *     @include dark-mode { background: var(--black)ish; }
 * }
 */
@mixin dark-mode {
  @media (prefers-color-scheme: dark) {
    @content;
  }
}

/**
 * Bare button
 *
 * Get rid of default button styling
 */
@mixin bare-button {
  background: transparent;
  cursor: pointer;
  line-height: 1.1;
  text-align: center;
  text-decoration: none;
  border: 0;
  appearance: none;
  &:focus:not(:focus-visible) {
    outline: 0;
  }
}

/*
 * Bare list
 *
 * Get rid of list-style and padding
 */
@mixin bare-list {
  margin: 0;
  padding: 0;
  list-style-type: none;
  & > li {
    margin: 0;
  }
}

/**
 * Aspect ratio for images, videos and iframes.
 *
 * Usage:
 * figure {
 *     @include aspect-ratio(16, 9);
 * }
 */
@mixin aspect-ratio($width, $height) {
  overflow: hidden;
  position: relative;
  width: 100%;
  padding: 0;
  padding-bottom: math.div(100%, $width) * $height;

  // Requires the image to be a direct child.
  > iframe,
  > img,
  > video,
  > div {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    object-fit: cover;
  }
  // Some embeds can't handle the object fit.
  > iframe {
    object-fit: unset;
  }

  /* stylelint-disable order/order */
  @supports (aspect-ratio: 16 / 9) {
    overflow: visible;
    position: relative;
    width: 100%;
    padding-bottom: 0;

    // Requires the image to be a direct child.
    > iframe,
    > video,
    > img,
    > div {
      position: relative;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      object-fit: cover;
      aspect-ratio: math.div($width, $height);
    }
    // Some embeds can't handle the object fit.
    > iframe {
      object-fit: unset;
    }
  }
}

/**
 * Dev mixins
 */
@mixin outline {
  * {
    outline: 1px solid lime;
  }
}

/**
 * Fancy underline
 */
@mixin fancy-underline($mode: default) {
  position: relative;
  display: inline-block;
  text-decoration: none;

  @if $mode == "reversed" {
    &::before {
      transform: scaleX(1);
      transform-origin: right center;
    }
    &:hover::before {
      transform: scaleX(0);
    }
  } @else if $mode == "current" {
    &::before {
      transform: scaleX(1);
    }
  } @else {
    &::before {
      transform: scaleX(0);
      transform-origin: left center;
    }
    &:hover::before {
      transform: scaleX(1);
    }
  }

  &::before {
    content: "";
    position: absolute;
    bottom: 0;
    left: 0;
    display: block;
    width: 100%;
    height: 0.06em;
    min-height: 2px;
    background: var(--white);
    transition: transform $pace-normal $ease-in-out;
    @include reduced-motion {
      transition: none;
    }
  }
}

/**
 * Don't use a flexible grid here to ensure equal column if there are only 1 or 2 items.
 */
@mixin three-column-grid {
  display: grid;
  grid-template-columns: repeat(1, 1fr);

  @include bp-min(tiny) {
    grid-template-columns: repeat(2, 1fr);
  }
  @include bp-min(small) {
    grid-template-columns: repeat(3, 1fr);
  }
}

/**
 * Don't use a flexible grid here to ensure equal column if there are only 1 or 2 items.
 */
@mixin four-column-grid {
  display: grid;
  grid-template-columns: repeat(1, 1fr);

  @include bp-min(tiny) {
    grid-template-columns: repeat(2, 1fr);
  }
  @include bp-min(small) {
    grid-template-columns: repeat(3, 1fr);
  }
  @include bp-min(medium) {
    grid-template-columns: repeat(4, 1fr);
  }
}

/**
* Increase the tap area of an element to the entire width & height of the element.
*/
@mixin expand-clickable-area {
  &::after {
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
  }
}

/**
* Increase the tap area of an element to the minimum desired tap size.
*/
@mixin expand-clickable-area-tap-size {
  position: relative;
  &::after {
    content: "";
    position: absolute;
    top: 50%;
    left: 50%;
    width: 100%;
    min-width: $tap-size-large;
    height: 100%;
    min-height: $tap-size-large;
    transform: translate(-50%, -50%);
  }
}

/**
* Add round border around an icon and centers it
*/
@mixin base-rounded-icon {
  display: flex;
  align-items: center;
  justify-content: center;
  border-radius: 50%;

  & > svg {
    flex-shrink: 0;
  }
}

/**
* Break words on mobile when they get too wide for the screen
*/
@mixin word-break {
  @include bp-max(tiny) {
    overflow-wrap: break-word;
    hyphens: auto;
  }
}
/**
 * Add zoom effect img when hovering
 */
@mixin image-zoom-on-hover {
  & img {
    transition: transform 0.3s cubic-bezier(0, 0, 0.13, 1);
  }

  &:hover img,
  &:focus img {
    transform: scale(1.1);
  }
}

/**
* Add underline when hovering
*/
@mixin underline-link-hover {
  cursor: pointer;
  text-decoration: none;

  &:hover,
  &:focus {
    text-decoration: underline;
    text-decoration-thickness: 0.15rem;
    text-underline-offset: 0.2rem;
  }
}
